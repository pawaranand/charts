{"version":3,"file":"frappe-charts.min.js","sources":["../src/scripts/helpers/dom.js","../src/scripts/helpers/utils.js","../src/scripts/objects/SvgTip.js","../src/scripts/charts/BaseChart.js","../src/scripts/charts/AxisChart.js","../src/scripts/charts/BarChart.js","../src/scripts/charts/LineChart.js","../src/scripts/charts/ScatterChart.js","../src/scripts/charts/PercentageChart.js","../src/scripts/charts/Heatmap.js","../src/scripts/charts.js"],"sourcesContent":["export default function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\n$.findNodeIndex = (node) =>\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n};\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\t\t}\n\t\telse if (i in element) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\n$.createSVG = (tag, o) => {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\t\t}\n\t\telse {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n};\n\n$.runSVGAnimation = (svg_container, elements) => {\n\t// let parent = elements[0][0]['unit'].parentNode;\n\n\tlet new_elements = [];\n\tlet anim_elements = [];\n\n\telements.map(element => {\n\t\tlet obj = element[0];\n\t\tlet parent = obj.unit.parentNode;\n\t\t// let index = let findNodeIndex(obj.unit);\n\n\t\tlet anim_element, new_element;\n\n\t\telement[0] = obj.unit;\n\n\t\t[anim_element, new_element] = $.animateSVG(...element);\n\n\t\tnew_elements.push(new_element);\n\t\tanim_elements.push([anim_element, parent]);\n\n\t\tparent.replaceChild(anim_element, obj.unit);\n\n\t\tif(obj.array) {\n\t\t\tobj.array[obj.index] = new_element;\n\t\t} else {\n\t\t\tobj.object[obj.key] = new_element;\n\t\t}\n\t});\n\n\tlet anim_svg = svg_container.cloneNode(true);\n\n\tanim_elements.map((anim_element, i) => {\n\t\tanim_element[1].replaceChild(new_elements[i], anim_element[0]);\n\t\telements[i][0] = new_elements[i];\n\t});\n\n\treturn anim_svg;\n};\n\n$.animateSVG = (element, props, dur, easing_type=\"linear\", type=undefined, old_values={}) => {\n\tlet easing = {\n\t\tease: \"0.25 0.1 0.25 1\",\n\t\tlinear: \"0 0 1 1\",\n\t\t// easein: \"0.42 0 1 1\",\n\t\teasein: \"0.1 0.8 0.2 1\",\n\t\teaseout: \"0 0 0.58 1\",\n\t\teaseinout: \"0.42 0 0.58 1\"\n\t};\n\n\tlet anim_element = element.cloneNode(true);\n\tlet new_element = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animate_element;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimate_element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimate_element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet current_value = old_values[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet anim_attr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: current_value,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: current_value + \";\" + value,\n\t\t\tkeySplines: easing[easing_type],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanim_attr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in anim_attr) {\n\t\t\tanimate_element.setAttribute(i, anim_attr[i]);\n\t\t}\n\n\t\tanim_element.appendChild(animate_element);\n\n\t\tif(type) {\n\t\t\tnew_element.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnew_element.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [anim_element, new_element];\n};\n\n$.offset = (element) => {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n};\n\n$.isElementInViewport = (el) => {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n};\n\n$.bind = (element, o) => {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n};\n\n$.unbind = (element, o) => {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n};\n\n$.fire = (target, type, properties) => {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n};\n","export function float_2(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\nexport function arrays_equal(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet are_equal = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) are_equal = false;\n\t});\n\treturn are_equal;\n}\n\nexport function shuffle(array) {\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\n\tvar currentIndex = array.length, temporaryValue, randomIndex;\n\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\n\treturn array;\n}\n","import $ from '../helpers/dom';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.title_name = '';\n\t\tthis.title_value = '';\n\t\tthis.list_values = [];\n\t\tthis.title_value_first = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.make_tooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calc_position();\n\t\t// this.show_tip();\n\t}\n\n\tmake_tooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hide_tip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.data_point_list = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hide_tip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.title_value_first) {\n\t\t\ttitle = `<strong>${this.title_value}</strong>${this.title_name}`;\n\t\t} else {\n\t\t\ttitle = `${this.title_name}<strong>${this.title_value}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.data_point_list.innerHTML = '';\n\n\t\tthis.list_values.map((set) => {\n\t\t\tlet li = $.create('li', {\n\t\t\t\tclassName: `border-top ${set.color || 'black'}`,\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${set.value ? set.value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.data_point_list.appendChild(li);\n\t\t});\n\t}\n\n\tcalc_position() {\n\t\tthis.top = this.y - this.container.offsetHeight;\n\t\tthis.left = this.x - this.container.offsetWidth/2;\n\t\tlet max_left = this.parent.offsetWidth - this.container.offsetWidth;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > max_left) {\n\t\t\tlet delta = this.left - max_left;\n\t\t\tpointer.style.left = `calc(50% + ${delta}px)`;\n\t\t\tthis.left = max_left;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tset_values(x, y, title_name = '', title_value = '', list_values = [], title_value_first = 0) {\n\t\tthis.title_name = title_name;\n\t\tthis.title_value = title_value;\n\t\tthis.list_values = list_values;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.title_value_first = title_value_first;\n\t\tthis.refresh();\n\t}\n\n\thide_tip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshow_tip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","import SvgTip from '../objects/SvgTip';\nimport $ from '../helpers/dom';\nimport Chart from '../charts';\n\nexport default class BaseChart {\n\tconstructor({\n\t\tparent = \"\",\n\t\theight = 240,\n\n\t\ttitle = '', subtitle = '',\n\n\t\tdata = {},\n\t\tformat_lambdas = {},\n\n\t\tsummary = [],\n\n\t\tis_navigable = 0,\n\t\thas_legend = 0,\n\n\t\ttype = '' // eslint-disable-line no-unused-vars\n\t}) {\n\t\tthis.raw_chart_args = arguments[0];\n\n\t\tthis.parent = document.querySelector(parent);\n\t\tthis.title = title;\n\t\tthis.subtitle = subtitle;\n\n\t\tthis.data = data;\n\t\tthis.format_lambdas = format_lambdas;\n\n\t\tthis.specific_values = data.specific_values || [];\n\t\tthis.summary = summary;\n\n\t\tthis.is_navigable = is_navigable;\n\t\tif(this.is_navigable) {\n\t\t\tthis.current_index = 0;\n\t\t}\n\t\tthis.has_legend = has_legend;\n\n\t\tthis.chart_types = ['line', 'scatter', 'bar', 'percentage', 'heatmap'];\n\n\t\tthis.set_margins(height);\n\t}\n\n\tget_different_chart(type) {\n\t\tif(!this.chart_types.includes(type)) {\n\t\t\tconsole.error(`'${type}' is not a valid chart type.`);\n\t\t}\n\t\tif(type === this.type) return;\n\n\t\t// Only across compatible types\n\t\tlet compatible_types = {\n\t\t\tbar: ['line', 'scatter', 'percentage'],\n\t\t\tline: ['scatter', 'bar', 'percentage'],\n\t\t\tscatter: ['line', 'bar', 'percentage'],\n\t\t\tpercentage: ['bar', 'line', 'scatter'],\n\t\t\theatmap: []\n\t\t};\n\n\t\tif(!compatible_types[this.type].includes(type)) {\n\t\t\tconsole.error(`'${this.type}' chart cannot be converted to a '${type}' chart.`);\n\t\t}\n\n\t\t// Okay, this is anticlimactic\n\t\t// this function will need to actually be 'change_chart_type(type)'\n\t\t// that will update only the required elements, but for now ...\n\t\treturn new Chart({\n\t\t\tparent: this.raw_chart_args.parent,\n\t\t\ttitle: this.title,\n\t\t\tdata: this.raw_chart_args.data,\n\t\t\ttype: type,\n\t\t\theight: this.raw_chart_args.height\n\t\t});\n\t}\n\n\tset_margins(height) {\n\t\tthis.base_height = height;\n\t\tthis.height = height - 40;\n\t\tthis.translate_x = 60;\n\t\tthis.translate_y = 10;\n\t}\n\n\tsetup() {\n\t\tthis.bind_window_events();\n\t\tthis.refresh(true);\n\t}\n\n\tbind_window_events() {\n\t\twindow.addEventListener('resize', () => this.refresh());\n\t\twindow.addEventListener('orientationchange', () => this.refresh());\n\t}\n\n\trefresh(init=false) {\n\t\tthis.setup_base_values();\n\t\tthis.set_width();\n\n\t\tthis.setup_container();\n\t\tthis.setup_components();\n\n\t\tthis.setup_values();\n\t\tthis.setup_utils();\n\n\t\tthis.make_graph_components(init);\n\t\tthis.make_tooltip();\n\n\t\tif(this.summary.length > 0) {\n\t\t\tthis.show_custom_summary();\n\t\t} else {\n\t\t\tthis.show_summary();\n\t\t}\n\n\t\tif(this.is_navigable) {\n\t\t\tthis.setup_navigation(init);\n\t\t}\n\t}\n\n\tset_width() {\n\t\tlet special_values_width = 0;\n\t\tthis.specific_values.map(val => {\n\t\t\tif(this.get_strwidth(val.title) > special_values_width) {\n\t\t\t\tspecial_values_width = this.get_strwidth(val.title) - 40;\n\t\t\t}\n\t\t});\n\t\tthis.base_width = this.parent.offsetWidth - special_values_width;\n\t\tthis.width = this.base_width - this.translate_x * 2;\n\t}\n\n\tsetup_base_values() {}\n\n\tsetup_container() {\n\t\tthis.container = $.create('div', {\n\t\t\tclassName: 'chart-container',\n\t\t\tinnerHTML: `<h6 class=\"title\">${this.title}</h6>\n\t\t\t\t<h6 class=\"sub-title uppercase\">${this.subtitle}</h6>\n\t\t\t\t<div class=\"frappe-chart graphics\"></div>\n\t\t\t\t<div class=\"graph-stats-container\"></div>`\n\t\t});\n\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\t\tthis.parent.appendChild(this.container);\n\n\t\tthis.chart_wrapper = this.container.querySelector('.frappe-chart');\n\t\tthis.stats_wrapper = this.container.querySelector('.graph-stats-container');\n\n\t\tthis.make_chart_area();\n\t\tthis.make_draw_area();\n\t}\n\n\tmake_chart_area() {\n\t\tthis.svg = $.createSVG('svg', {\n\t\t\tclassName: 'chart',\n\t\t\tinside: this.chart_wrapper,\n\t\t\twidth: this.base_width,\n\t\t\theight: this.base_height\n\t\t});\n\n\t\tthis.svg_defs = $.createSVG('defs', {\n\t\t\tinside: this.svg,\n\t\t});\n\n\t\treturn this.svg;\n\t}\n\n\tmake_draw_area() {\n\t\tthis.draw_area = $.createSVG(\"g\", {\n\t\t\tclassName: this.type + '-chart',\n\t\t\tinside: this.svg,\n\t\t\ttransform: `translate(${this.translate_x}, ${this.translate_y})`\n\t\t});\n\t}\n\n\tsetup_components() { }\n\n\tmake_tooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.chart_wrapper,\n\t\t});\n\t\tthis.bind_tooltip();\n\t}\n\n\n\tshow_summary() {}\n\tshow_custom_summary() {\n\t\tthis.summary.map(d => {\n\t\t\tlet stats = $.create('div', {\n\t\t\t\tclassName: 'stats',\n\t\t\t\tinnerHTML: `<span class=\"indicator ${d.color}\">${d.title}: ${d.value}</span>`\n\t\t\t});\n\t\t\tthis.stats_wrapper.appendChild(stats);\n\t\t});\n\t}\n\n\tsetup_navigation(init=false) {\n\t\tthis.make_overlay();\n\n\t\tif(init) {\n\t\t\tthis.bind_overlay();\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif($.isElementInViewport(this.chart_wrapper)) {\n\t\t\t\t\te = e || window.event;\n\n\t\t\t\t\tif (e.keyCode == '37') {\n\t\t\t\t\t\tthis.on_left_arrow();\n\t\t\t\t\t} else if (e.keyCode == '39') {\n\t\t\t\t\t\tthis.on_right_arrow();\n\t\t\t\t\t} else if (e.keyCode == '38') {\n\t\t\t\t\t\tthis.on_up_arrow();\n\t\t\t\t\t} else if (e.keyCode == '40') {\n\t\t\t\t\t\tthis.on_down_arrow();\n\t\t\t\t\t} else if (e.keyCode == '13') {\n\t\t\t\t\t\tthis.on_enter_key();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmake_overlay() {}\n\tbind_overlay() {}\n\tbind_units() {}\n\n\ton_left_arrow() {}\n\ton_right_arrow() {}\n\ton_up_arrow() {}\n\ton_down_arrow() {}\n\ton_enter_key() {}\n\n\tget_data_point(index=this.current_index) {\n\t\t// check for length\n\t\tlet data_point = {\n\t\t\tindex: index\n\t\t};\n\t\tlet y = this.y[0];\n\t\t['svg_units', 'y_tops', 'values'].map(key => {\n\t\t\tlet data_key = key.slice(0, key.length-1);\n\t\t\tdata_point[data_key] = y[key][index];\n\t\t});\n\t\tdata_point.label = this.x[index];\n\t\treturn data_point;\n\t}\n\n\tupdate_current_data_point(index) {\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= this.x.length) index = this.x.length - 1;\n\t\tif(index === this.current_index) return;\n\t\tthis.current_index = index;\n\t\t$.fire(this.parent, \"data-select\", this.get_data_point());\n\t}\n\n\t// Helpers\n\tget_strwidth(string) {\n\t\treturn (string+\"\").length * 8;\n\t}\n\n\t// Objects\n\tsetup_utils() { }\n}\n","import $ from '../helpers/dom';\nimport { float_2, arrays_equal } from '../helpers/utils';\nimport BaseChart from './BaseChart';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.x = this.data.labels;\n\t\tthis.y = this.data.datasets;\n\n\t\tthis.is_series = args.is_series;\n\n\t\tthis.get_y_label = this.format_lambdas.y_label;\n\t\tthis.get_y_tooltip = this.format_lambdas.y_tooltip;\n\t\tthis.get_x_tooltip = this.format_lambdas.x_tooltip;\n\n\t\tthis.colors = ['green', 'blue', 'violet', 'red', 'orange',\n\t\t\t'yellow', 'light-blue', 'light-green', 'purple', 'magenta'];\n\n\t\tthis.zero_line = this.height;\n\t}\n\n\tsetup_values() {\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values = d.values.map(val => (!isNaN(val) ? val : 0));\n\t\t});\n\t\tthis.setup_x();\n\t\tthis.setup_y();\n\t}\n\n\tsetup_x() {\n\t\tthis.set_avg_unit_width_and_x_offset();\n\n\t\tif(this.x_axis_positions) {\n\t\t\tthis.x_old_axis_positions =  this.x_axis_positions.slice();\n\t\t}\n\t\tthis.x_axis_positions = this.x.map((d, i) =>\n\t\t\tfloat_2(this.x_offset + i * this.avg_unit_width));\n\n\t\tif(!this.x_old_axis_positions) {\n\t\t\tthis.x_old_axis_positions = this.x_axis_positions.slice();\n\t\t}\n\t}\n\n\tsetup_y() {\n\t\tif(this.y_axis_values) {\n\t\t\tthis.y_old_axis_values =  this.y_axis_values.slice();\n\t\t}\n\n\t\tlet values = this.get_all_y_values();\n\n\t\tif(this.y_sums && this.y_sums.length > 0) {\n\t\t\tvalues = values.concat(this.y_sums);\n\t\t}\n\n\t\tthis.y_axis_values = this.get_y_axis_points(values);\n\n\t\tif(!this.y_old_axis_values) {\n\t\t\tthis.y_old_axis_values = this.y_axis_values.slice();\n\t\t}\n\n\t\tconst y_pts = this.y_axis_values;\n\t\tconst value_range = y_pts[y_pts.length-1] - y_pts[0];\n\n\t\tif(this.multiplier) this.old_multiplier = this.multiplier;\n\t\tthis.multiplier = this.height / value_range;\n\t\tif(!this.old_multiplier) this.old_multiplier = this.multiplier;\n\n\t\tconst zero_index = y_pts.indexOf(0);\n\t\tconst interval = y_pts[1] - y_pts[0];\n\t\tconst interval_height = interval * this.multiplier;\n\n\t\tif(this.zero_line) this.old_zero_line = this.zero_line;\n\t\tthis.zero_line = this.height - (zero_index * interval_height);\n\t\tif(!this.old_zero_line) this.old_zero_line = this.zero_line;\n\t}\n\n\tsetup_components() {\n\t\tsuper.setup_components();\n\t\tthis.setup_marker_components();\n\t\tthis.setup_aggregation_components();\n\t\tthis.setup_graph_components();\n\t}\n\n\tsetup_marker_components() {\n\t\tthis.y_axis_group = $.createSVG('g', {className: 'y axis', inside: this.draw_area});\n\t\tthis.x_axis_group = $.createSVG('g', {className: 'x axis', inside: this.draw_area});\n\t\tthis.specific_y_group = $.createSVG('g', {className: 'specific axis', inside: this.draw_area});\n\t}\n\n\tsetup_aggregation_components() {\n\t\tthis.sum_group = $.createSVG('g', {className: 'data-points', inside: this.draw_area});\n\t\tthis.average_group = $.createSVG('g', {className: 'chart-area', inside: this.draw_area});\n\t}\n\n\tsetup_graph_components() {\n\t\tthis.svg_units_groups = [];\n\t\tthis.y.map((d, i) => {\n\t\t\tthis.svg_units_groups[i] = $.createSVG('g', {\n\t\t\t\tclassName: 'data-points data-points-' + i,\n\t\t\t\tinside: this.draw_area\n\t\t\t});\n\t\t});\n\t}\n\n\tmake_graph_components(init=false) {\n\t\tthis.make_y_axis();\n\t\tthis.make_x_axis();\n\t\tthis.draw_graph(init);\n\t\tthis.make_y_specifics();\n\t}\n\n\t// make VERTICAL lines for x values\n\tmake_x_axis(animate=false) {\n\t\tlet start_at, height, text_start_at, axis_line_class = '';\n\t\tif(this.x_axis_mode === 'span') {\t\t// long spanning lines\n\t\t\tstart_at = -7;\n\t\t\theight = this.height + 15;\n\t\t\ttext_start_at = this.height + 25;\n\t\t} else if(this.x_axis_mode === 'tick'){\t// short label lines\n\t\t\tstart_at = this.height;\n\t\t\theight = 6;\n\t\t\ttext_start_at = 9;\n\t\t\taxis_line_class = 'x-axis-label';\n\t\t}\n\n\t\tthis.x_axis_group.setAttribute('transform', `translate(0,${start_at})`);\n\n\t\tif(animate) {\n\t\t\tthis.make_anim_x_axis(height, text_start_at, axis_line_class);\n\t\t\treturn;\n\t\t}\n\n\t\tlet allowed_space = this.avg_unit_width * 1.5;\n\t\tlet allowed_letters = allowed_space / 8;\n\n\t\tthis.x_axis_group.textContent = '';\n\t\tthis.x.map((point, i) => {\n\t\t\tlet space_taken = this.get_strwidth(point);\n\t\t\tif(space_taken > allowed_space) {\n\t\t\t\tif(this.is_series) {\n\t\t\t\t\t// Skip some axis lines if X axis is a series\n\t\t\t\t\tlet skips = 1;\n\t\t\t\t\twhile((space_taken/skips)*2 > allowed_space) {\n\t\t\t\t\t\tskips++;\n\t\t\t\t\t}\n\t\t\t\t\tif(i % skips !== 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpoint = point.slice(0, allowed_letters-3) + \" ...\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.x_axis_group.appendChild(\n\t\t\t\tthis.make_x_line(\n\t\t\t\t\theight,\n\t\t\t\t\ttext_start_at,\n\t\t\t\t\tpoint,\n\t\t\t\t\t'x-value-text',\n\t\t\t\t\taxis_line_class,\n\t\t\t\t\tthis.x_axis_positions[i]\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\t// make HORIZONTAL lines for y values\n\tmake_y_axis(animate=false) {\n\t\tif(animate) {\n\t\t\tthis.make_anim_y_axis();\n\t\t\tthis.make_anim_y_specifics();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [width, text_end_at, axis_line_class, start_at] = this.get_y_axis_line_props();\n\n\t\tthis.y_axis_group.textContent = '';\n\t\tthis.y_axis_values.map((value, i) => {\n\t\t\tthis.y_axis_group.appendChild(\n\t\t\t\tthis.make_y_line(\n\t\t\t\t\tstart_at,\n\t\t\t\t\twidth,\n\t\t\t\t\ttext_end_at,\n\t\t\t\t\tvalue,\n\t\t\t\t\t'y-value-text',\n\t\t\t\t\taxis_line_class,\n\t\t\t\t\tthis.zero_line - value * this.multiplier,\n\t\t\t\t\t(value === 0 && i !== 0) // Non-first Zero line\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\tget_y_axis_line_props(specific=false) {\n\t\tif(specific) {\n\t\t\treturn[this.width, this.width + 5, 'specific-value', 0];\n\t\t}\n\t\tlet width, text_end_at = -9, axis_line_class = '', start_at = 0;\n\t\tif(this.y_axis_mode === 'span') {\t\t// long spanning lines\n\t\t\twidth = this.width + 6;\n\t\t\tstart_at = -6;\n\t\t} else if(this.y_axis_mode === 'tick'){\t// short label lines\n\t\t\twidth = -6;\n\t\t\taxis_line_class = 'y-axis-label';\n\t\t}\n\n\t\treturn [width, text_end_at, axis_line_class, start_at];\n\t}\n\n\tdraw_graph(init=false) {\n\t\tif(this.raw_chart_args.hasOwnProperty(\"init\") && !this.raw_chart_args.init) {\n\t\t\tthis.y.map((d, i) => {\n\t\t\t\td.svg_units = [];\n\t\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t\t\tthis.make_new_units(d, i);\n\t\t\t\tthis.calc_y_dependencies();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tif(init) {\n\t\t\tthis.draw_new_graph_and_animate();\n\t\t\treturn;\n\t\t}\n\t\tthis.y.map((d, i) => {\n\t\t\td.svg_units = [];\n\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t\tthis.make_new_units(d, i);\n\t\t});\n\t}\n\n\tdraw_new_graph_and_animate() {\n\t\tlet data = [];\n\t\tthis.y.map((d, i) => {\n\t\t\t// Anim: Don't draw initial values, store them and update later\n\t\t\td.y_tops = new Array(d.values.length).fill(this.zero_line); // no value\n\t\t\tdata.push({values: d.values});\n\t\t\td.svg_units = [];\n\n\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t\tthis.make_new_units(d, i);\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\tthis.update_values(data);\n\t\t}, 350);\n\t}\n\n\tsetup_navigation(init) {\n\t\tif(init) {\n\t\t\t// Hack: defer nav till initial update_values\n\t\t\tsetTimeout(() => {\n\t\t\t\tsuper.setup_navigation(init);\n\t\t\t}, 500);\n\t\t} else {\n\t\t\tsuper.setup_navigation(init);\n\t\t}\n\t}\n\n\tmake_new_units(d, i) {\n\t\tthis.make_new_units_for_dataset(\n\t\t\tthis.x_axis_positions,\n\t\t\td.y_tops,\n\t\t\td.color || this.colors[i],\n\t\t\ti,\n\t\t\tthis.y.length\n\t\t);\n\t}\n\n\tmake_new_units_for_dataset(x_values, y_values, color, dataset_index,\n\t\tno_of_datasets, units_group, units_array, unit) {\n\n\t\tif(!units_group) units_group = this.svg_units_groups[dataset_index];\n\t\tif(!units_array) units_array = this.y[dataset_index].svg_units;\n\t\tif(!unit) unit = this.unit_args;\n\n\t\tunits_group.textContent = '';\n\t\tunits_array.length = 0;\n\n\t\ty_values.map((y, i) => {\n\t\t\tlet data_unit = this.draw[unit.type](\n\t\t\t\tx_values[i],\n\t\t\t\ty,\n\t\t\t\tunit.args,\n\t\t\t\tcolor,\n\t\t\t\ti,\n\t\t\t\tdataset_index,\n\t\t\t\tno_of_datasets\n\t\t\t);\n\t\t\tunits_group.appendChild(data_unit);\n\t\t\tunits_array.push(data_unit);\n\t\t});\n\n\t\tif(this.is_navigable) {\n\t\t\tthis.bind_units(units_array);\n\t\t}\n\t}\n\n\tmake_y_specifics() {\n\t\tthis.specific_y_group.textContent = '';\n\t\tthis.specific_values.map(d => {\n\t\t\tthis.specific_y_group.appendChild(\n\t\t\t\tthis.make_y_line(\n\t\t\t\t\t0,\n\t\t\t\t\tthis.width,\n\t\t\t\t\tthis.width + 5,\n\t\t\t\t\td.title.toUpperCase(),\n\t\t\t\t\t'specific-value',\n\t\t\t\t\t'specific-value',\n\t\t\t\t\tthis.zero_line - d.value * this.multiplier,\n\t\t\t\t\tfalse,\n\t\t\t\t\td.line_type\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\tbind_tooltip() {\n\t\t// TODO: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.chart_wrapper.addEventListener('mousemove', (e) => {\n\t\t\tlet offset = $.offset(this.chart_wrapper);\n\t\t\tlet relX = e.pageX - offset.left - this.translate_x;\n\t\t\tlet relY = e.pageY - offset.top - this.translate_y;\n\n\t\t\tif(relY < this.height + this.translate_y * 2) {\n\t\t\t\tthis.map_tooltip_x_position_and_show(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hide_tip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmap_tooltip_x_position_and_show(relX) {\n\t\tif(!this.y_min_tops) return;\n\t\tfor(var i=this.x_axis_positions.length - 1; i >= 0 ; i--) {\n\t\t\tlet x_val = this.x_axis_positions[i];\n\t\t\t// let delta = i === 0 ? this.avg_unit_width : x_val - this.x_axis_positions[i-1];\n\t\t\tif(relX > x_val - this.avg_unit_width/2) {\n\t\t\t\tlet x = x_val + this.translate_x;\n\t\t\t\tlet y = this.y_min_tops[i] + this.translate_y;\n\n\t\t\t\tlet title = this.x.formatted && this.x.formatted.length>0\n\t\t\t\t\t? this.x.formatted[i] : this.x[i];\n\t\t\t\tlet values = this.y.map((set, j) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: set.title,\n\t\t\t\t\t\tvalue: set.formatted ? set.formatted[i] : set.values[i],\n\t\t\t\t\t\tcolor: set.color || this.colors[j],\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\t// TODO: upside-down tooltips for negative values?\n\t\t\t\tthis.tip.set_values(x, y, title, '', values);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// API\n\tshow_sums() {\n\t\tthis.updating = true;\n\n\t\tthis.y_sums = new Array(this.x_axis_positions.length).fill(0);\n\t\tthis.y.map(d => {\n\t\t\td.values.map( (value, i) => {\n\t\t\t\tthis.y_sums[i] += value;\n\t\t\t});\n\t\t});\n\n\t\t// Remake y axis, animate\n\t\tthis.update_values();\n\n\t\t// Then make sum units, don't animate\n\t\tthis.sum_units = [];\n\n\t\tthis.make_new_units_for_dataset(\n\t\t\tthis.x_axis_positions,\n\t\t\tthis.y_sums.map( val => float_2(this.zero_line - val * this.multiplier)),\n\t\t\t'light-grey',\n\t\t\t0,\n\t\t\t1,\n\t\t\tthis.sum_group,\n\t\t\tthis.sum_units\n\t\t);\n\n\t\t// this.make_path && this.make_path(d, i, old_x, old_y, d.color || this.colors[i]);\n\n\t\tthis.updating = false;\n\t}\n\n\thide_sums() {\n\t\tif(this.updating) return;\n\t\tthis.y_sums = [];\n\t\tthis.sum_group.textContent = '';\n\t\tthis.sum_units = [];\n\t\tthis.update_values();\n\t}\n\n\tshow_averages() {\n\t\tthis.old_specific_values = this.specific_values.slice();\n\t\tthis.y.map((d, i) => {\n\t\t\tlet sum = 0;\n\t\t\td.values.map(e => {sum+=e;});\n\t\t\tlet average = sum/d.values.length;\n\n\t\t\tthis.specific_values.push({\n\t\t\t\ttitle: \"AVG\" + \" \" + (i+1),\n\t\t\t\tline_type: \"dashed\",\n\t\t\t\tvalue: average,\n\t\t\t\tauto: 1\n\t\t\t});\n\t\t});\n\n\t\tthis.update_values();\n\t}\n\n\thide_averages() {\n\t\tthis.old_specific_values = this.specific_values.slice();\n\n\t\tlet indices_to_remove = [];\n\t\tthis.specific_values.map((d, i) => {\n\t\t\tif(d.auto) indices_to_remove.unshift(i);\n\t\t});\n\n\t\tindices_to_remove.map(index => {\n\t\t\tthis.specific_values.splice(index, 1);\n\t\t});\n\n\t\tthis.update_values();\n\t}\n\n\tupdate_values(new_y, new_x) {\n\t\tif(!new_x) {\n\t\t\tnew_x = this.x;\n\t\t}\n\t\tthis.elements_to_animate = [];\n\t\tthis.updating = true;\n\n\t\tthis.old_x_values = this.x.slice();\n\t\tthis.old_y_axis_tops = this.y.map(d => d.y_tops.slice());\n\n\t\tthis.old_y_values = this.y.map(d => d.values);\n\n\t\tthis.no_of_extra_pts = new_x.length - this.x.length;\n\n\t\t// Just update values prop, setup_x/y() will do the rest\n\t\tif(new_y) this.y.map((d, i) => {d.values = new_y[i].values;});\n\t\tif(new_x) this.x = new_x;\n\n\t\tthis.setup_x();\n\t\tthis.setup_y();\n\n\t\t// Animate only if positions have changed\n\t\tif(!arrays_equal(this.x_old_axis_positions, this.x_axis_positions)) {\n\t\t\tthis.make_x_axis(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tif(!this.updating) this.make_x_axis();\n\t\t\t}, 300);\n\t\t}\n\n\t\tif(!arrays_equal(this.y_old_axis_values, this.y_axis_values) ||\n\t\t\t(this.old_specific_values &&\n\t\t\t!arrays_equal(this.old_specific_values, this.specific_values))) {\n\n\t\t\tthis.make_y_axis(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tif(!this.updating) {\n\t\t\t\t\tthis.make_y_axis();\n\t\t\t\t\tthis.make_y_specifics();\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t}\n\n\t\t// Change in data, so calculate dependencies\n\t\tthis.calc_y_dependencies();\n\n\t\tthis.animate_graphs();\n\n\t\t// Trigger animation with the animatable elements in this.elements_to_animate\n\t\tthis.run_animation();\n\n\t\tthis.updating = false;\n\t}\n\n\tadd_data_point(y_point, x_point, index=this.x.length) {\n\t\tlet new_y = this.y.map(data_set => { return {values:data_set.values}; });\n\t\tnew_y.map((d, i) => { d.values.splice(index, 0, y_point[i]); });\n\t\tlet new_x = this.x.slice();\n\t\tnew_x.splice(index, 0, x_point);\n\n\t\tthis.update_values(new_y, new_x);\n\t}\n\n\tremove_data_point(index = this.x.length-1) {\n\t\tif(this.x.length < 3) return;\n\n\t\tlet new_y = this.y.map(data_set => { return {values:data_set.values}; });\n\t\tnew_y.map((d) => { d.values.splice(index, 1); });\n\t\tlet new_x = this.x.slice();\n\t\tnew_x.splice(index, 1);\n\n\t\tthis.update_values(new_y, new_x);\n\t}\n\n\trun_animation() {\n\t\tlet anim_svg = $.runSVGAnimation(this.svg, this.elements_to_animate);\n\n\t\tif(this.svg.parentNode == this.chart_wrapper) {\n\t\t\tthis.chart_wrapper.removeChild(this.svg);\n\t\t\tthis.chart_wrapper.appendChild(anim_svg);\n\n\t\t}\n\n\t\t// Replace the new svg (data has long been replaced)\n\t\tsetTimeout(() => {\n\t\t\tif(anim_svg.parentNode == this.chart_wrapper) {\n\t\t\t\tthis.chart_wrapper.removeChild(anim_svg);\n\t\t\t\tthis.chart_wrapper.appendChild(this.svg);\n\t\t\t}\n\t\t}, 200);\n\t}\n\n\tanimate_graphs() {\n\t\tthis.y.map((d, i) => {\n\t\t\t// Pre-prep, equilize no of positions between old and new\n\t\t\tlet [old_x, old_y, new_x, new_y] = this.calc_old_and_new_postions(d, i);\n\t\t\tif(this.no_of_extra_pts >= 0) {\n\t\t\t\tthis.make_path && this.make_path(d, i, old_x, old_y, d.color || this.colors[i]);\n\t\t\t\tthis.make_new_units_for_dataset(old_x, old_y, d.color || this.colors[i], i, this.y.length);\n\t\t\t}\n\t\t\td.path && this.animate_path(d, i, old_x, old_y, new_x, new_y);\n\t\t\tthis.animate_units(d, i, old_x, old_y, new_x, new_y);\n\t\t});\n\n\t\t// TODO: replace with real units\n\t\tsetTimeout(() => {\n\t\t\tthis.y.map((d, i) => {\n\t\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t\t\tthis.make_new_units(d, i);\n\t\t\t});\n\t\t}, 300);\n\t}\n\n\tanimate_path(d, i, old_x, old_y, new_x, new_y) {\n\t\t// Animate path\n\t\tconst new_points_list = new_y.map((y, i) => (new_x[i] + ',' + y));\n\t\tconst new_path_str = new_points_list.join(\"L\");\n\n\t\tconst path_args = [{unit: d.path, object: d, key: 'path'}, {d:\"M\"+new_path_str}, 250, \"easein\"];\n\t\tthis.elements_to_animate.push(path_args);\n\n\t\t// Animate region\n\t\tif(d.region_path) {\n\t\t\tlet reg_start_pt = `0,${this.zero_line}L`;\n\t\t\tlet reg_end_pt = `L${this.width},${this.zero_line}`;\n\n\t\t\tconst region_args = [\n\t\t\t\t{unit: d.region_path, object: d, key: 'region_path'},\n\t\t\t\t{d:\"M\" + reg_start_pt + new_path_str + reg_end_pt},\n\t\t\t\t250,\n\t\t\t\t\"easein\"\n\t\t\t];\n\t\t\tthis.elements_to_animate.push(region_args);\n\t\t}\n\t}\n\n\tanimate_units(d, index, old_x, old_y, new_x, new_y) {\n\t\tlet type = this.unit_args.type;\n\n\t\td.svg_units.map((unit, i) => {\n\t\t\tif(!new_x[i] || !new_y[i]) return;\n\t\t\tthis.elements_to_animate.push(this.animate[type](\n\t\t\t\t{unit:unit, array:d.svg_units, index: i}, // unit, with info to replace where it came from in the data\n\t\t\t\tnew_x[i],\n\t\t\t\tnew_y[i],\n\t\t\t\tindex\n\t\t\t));\n\t\t});\n\t}\n\n\tcalc_old_and_new_postions(d, i) {\n\t\tlet old_x = this.x_old_axis_positions.slice();\n\t\tlet new_x = this.x_axis_positions.slice();\n\n\t\tlet old_y = this.old_y_axis_tops[i].slice();\n\t\tlet new_y = d.y_tops.slice();\n\n\t\tconst last_old_x_pos = old_x[old_x.length - 1];\n\t\tconst last_old_y_pos = old_y[old_y.length - 1];\n\n\t\tconst last_new_x_pos = new_x[new_x.length - 1];\n\t\tconst last_new_y_pos = new_y[new_y.length - 1];\n\n\t\tif(this.no_of_extra_pts >= 0) {\n\t\t\t// First substitute current path with a squiggled one (looking the same but\n\t\t\t// having more points at end),\n\t\t\t// then animate to stretch it later to new points\n\t\t\t// (new points already have more points)\n\n\t\t\t// Hence, the extra end points will correspond to current(old) positions\n\t\t\tlet filler_x = new Array(Math.abs(this.no_of_extra_pts)).fill(last_old_x_pos);\n\t\t\tlet filler_y = new Array(Math.abs(this.no_of_extra_pts)).fill(last_old_y_pos);\n\n\t\t\told_x = old_x.concat(filler_x);\n\t\t\told_y = old_y.concat(filler_y);\n\n\t\t} else {\n\t\t\t// Just modify the new points to have extra points\n\t\t\t// with the same position at end\n\t\t\tlet filler_x = new Array(Math.abs(this.no_of_extra_pts)).fill(last_new_x_pos);\n\t\t\tlet filler_y = new Array(Math.abs(this.no_of_extra_pts)).fill(last_new_y_pos);\n\n\t\t\tnew_x = new_x.concat(filler_x);\n\t\t\tnew_y = new_y.concat(filler_y);\n\t\t}\n\n\t\treturn [old_x, old_y, new_x, new_y];\n\t}\n\n\tmake_anim_x_axis(height, text_start_at, axis_line_class) {\n\t\t// Animate X AXIS to account for more or less axis lines\n\n\t\tconst old_pos = this.x_old_axis_positions;\n\t\tconst new_pos = this.x_axis_positions;\n\n\t\tconst old_vals = this.old_x_values;\n\t\tconst new_vals = this.x;\n\n\t\tconst last_line_pos = old_pos[old_pos.length - 1];\n\n\t\tlet add_and_animate_line = (value, old_pos, new_pos) => {\n\t\t\tif(typeof new_pos === 'string') {\n\t\t\t\tnew_pos = parseInt(new_pos.substring(0, new_pos.length-1));\n\t\t\t}\n\t\t\tconst x_line = this.make_x_line(\n\t\t\t\theight,\n\t\t\t\ttext_start_at,\n\t\t\t\tvalue, // new value\n\t\t\t\t'x-value-text',\n\t\t\t\taxis_line_class,\n\t\t\t\told_pos // old position\n\t\t\t);\n\t\t\tthis.x_axis_group.appendChild(x_line);\n\n\t\t\tthis.elements_to_animate && this.elements_to_animate.push([\n\t\t\t\t{unit: x_line, array: [0], index: 0},\n\t\t\t\t{transform: `${ new_pos }, 0`},\n\t\t\t\t250,\n\t\t\t\t\"easein\",\n\t\t\t\t\"translate\",\n\t\t\t\t{transform: `${ old_pos }, 0`}\n\t\t\t]);\n\t\t};\n\n\t\tthis.x_axis_group.textContent = '';\n\n\t\tthis.make_new_axis_anim_lines(\n\t\t\told_pos,\n\t\t\tnew_pos,\n\t\t\told_vals,\n\t\t\tnew_vals,\n\t\t\tlast_line_pos,\n\t\t\tadd_and_animate_line\n\t\t);\n\t}\n\n\tmake_anim_y_axis() {\n\t\t// Animate Y AXIS to account for more or less axis lines\n\n\t\tconst old_pos = this.y_old_axis_values.map(value =>\n\t\t\tthis.zero_line - value * this.multiplier);\n\t\tconst new_pos = this.y_axis_values.map(value =>\n\t\t\tthis.zero_line - value * this.multiplier);\n\n\t\tconst old_vals = this.y_old_axis_values;\n\t\tconst new_vals = this.y_axis_values;\n\n\t\tconst last_line_pos = old_pos[old_pos.length - 1];\n\n\t\tthis.y_axis_group.textContent = '';\n\n\t\tthis.make_new_axis_anim_lines(\n\t\t\told_pos,\n\t\t\tnew_pos,\n\t\t\told_vals,\n\t\t\tnew_vals,\n\t\t\tlast_line_pos,\n\t\t\tthis.add_and_animate_y_line.bind(this),\n\t\t\tthis.y_axis_group\n\t\t);\n\t}\n\n\tmake_anim_y_specifics() {\n\t\tthis.specific_y_group.textContent = '';\n\t\tthis.specific_values.map((d) => {\n\t\t\tthis.add_and_animate_y_line(\n\t\t\t\td.title,\n\t\t\t\tthis.old_zero_line - d.value * this.old_multiplier,\n\t\t\t\tthis.zero_line - d.value * this.multiplier,\n\t\t\t\t0,\n\t\t\t\tthis.specific_y_group,\n\t\t\t\td.line_type,\n\t\t\t\ttrue\n\t\t\t);\n\t\t});\n\t}\n\n\tmake_new_axis_anim_lines(old_pos, new_pos, old_vals, new_vals, last_line_pos, add_and_animate_line, group) {\n\t\tlet superimposed_positions, superimposed_values;\n\t\tlet no_of_extras = new_vals.length - old_vals.length;\n\t\tif(no_of_extras > 0) {\n\t\t\t// More axis are needed\n\t\t\t// First make only the superimposed (same position) ones\n\t\t\t// Add in the extras at the end later\n\t\t\tsuperimposed_positions = new_pos.slice(0, old_pos.length);\n\t\t\tsuperimposed_values = new_vals.slice(0, old_vals.length);\n\t\t} else {\n\t\t\t// Axis have to be reduced\n\t\t\t// Fake it by moving all current extra axis to the last position\n\t\t\t// You'll need filler positions and values in the new arrays\n\t\t\tconst filler_vals = new Array(Math.abs(no_of_extras)).fill(\"\");\n\t\t\tsuperimposed_values = new_vals.concat(filler_vals);\n\n\t\t\tconst filler_pos = new Array(Math.abs(no_of_extras)).fill(last_line_pos + \"F\");\n\t\t\tsuperimposed_positions = new_pos.concat(filler_pos);\n\t\t}\n\n\t\tsuperimposed_values.map((value, i) => {\n\t\t\tadd_and_animate_line(value, old_pos[i], superimposed_positions[i], i, group);\n\t\t});\n\n\t\tif(no_of_extras > 0) {\n\t\t\t// Add in extra axis in the end\n\t\t\t// and then animate to new positions\n\t\t\tconst extra_values = new_vals.slice(old_vals.length);\n\t\t\tconst extra_positions = new_pos.slice(old_pos.length);\n\n\t\t\textra_values.map((value, i) => {\n\t\t\t\tadd_and_animate_line(value, last_line_pos, extra_positions[i], i, group);\n\t\t\t});\n\t\t}\n\t}\n\n\tmake_x_line(height, text_start_at, point, label_class, axis_line_class, x_pos) {\n\t\tlet line = $.createSVG('line', {\n\t\t\tx1: 0,\n\t\t\tx2: 0,\n\t\t\ty1: 0,\n\t\t\ty2: height\n\t\t});\n\n\t\tlet text = $.createSVG('text', {\n\t\t\tclassName: label_class,\n\t\t\tx: 0,\n\t\t\ty: text_start_at,\n\t\t\tdy: '.71em',\n\t\t\tinnerHTML: point\n\t\t});\n\n\t\tlet x_level = $.createSVG('g', {\n\t\t\tclassName: `tick ${axis_line_class}`,\n\t\t\ttransform: `translate(${ x_pos }, 0)`\n\t\t});\n\n\t\tx_level.appendChild(line);\n\t\tx_level.appendChild(text);\n\n\t\treturn x_level;\n\t}\n\n\tmake_y_line(start_at, width, text_end_at, point, label_class, axis_line_class, y_pos, darker=false, line_type=\"\") {\n\t\tlet line = $.createSVG('line', {\n\t\t\tclassName: line_type === \"dashed\" ? \"dashed\": \"\",\n\t\t\tx1: start_at,\n\t\t\tx2: width,\n\t\t\ty1: 0,\n\t\t\ty2: 0\n\t\t});\n\n\t\tlet text = $.createSVG('text', {\n\t\t\tclassName: label_class,\n\t\t\tx: text_end_at,\n\t\t\ty: 0,\n\t\t\tdy: '.32em',\n\t\t\tinnerHTML: point+\"\"\n\t\t});\n\n\t\tlet y_level = $.createSVG('g', {\n\t\t\tclassName: `tick ${axis_line_class}`,\n\t\t\ttransform: `translate(0, ${y_pos})`,\n\t\t\t'stroke-opacity': 1\n\t\t});\n\n\t\tif(darker) {\n\t\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t\t}\n\n\t\ty_level.appendChild(line);\n\t\ty_level.appendChild(text);\n\n\t\treturn y_level;\n\t}\n\n\tadd_and_animate_y_line(value, old_pos, new_pos, i, group, type, specific=false) {\n\t\tlet filler = false;\n\t\tif(typeof new_pos === 'string') {\n\t\t\tnew_pos = parseInt(new_pos.substring(0, new_pos.length-1));\n\t\t\tfiller = true;\n\t\t}\n\t\tlet new_props = {transform: `0, ${ new_pos }`};\n\t\tlet old_props = {transform: `0, ${ old_pos }`};\n\n\t\tif(filler) {\n\t\t\tnew_props['stroke-opacity'] = 0;\n\t\t\t// old_props['stroke-opacity'] = 1;\n\t\t}\n\n\t\tlet [width, text_end_at, axis_line_class, start_at] = this.get_y_axis_line_props(specific);\n\t\tlet axis_label_class = !specific ? 'y-value-text' : 'specific-value';\n\t\tvalue = !specific ? value : (value+\"\").toUpperCase();\n\t\tconst y_line = this.make_y_line(\n\t\t\tstart_at,\n\t\t\twidth,\n\t\t\ttext_end_at,\n\t\t\tvalue,\n\t\t\taxis_label_class,\n\t\t\taxis_line_class,\n\t\t\told_pos,  // old position\n\t\t\t(value === 0 && i !== 0), // Non-first Zero line\n\t\t\ttype\n\t\t);\n\n\t\tgroup.appendChild(y_line);\n\n\t\tthis.elements_to_animate && this.elements_to_animate.push([\n\t\t\t{unit: y_line, array: [0], index: 0},\n\t\t\tnew_props,\n\t\t\t250,\n\t\t\t\"easein\",\n\t\t\t\"translate\",\n\t\t\told_props\n\t\t]);\n\t}\n\n\tget_y_axis_points(array) {\n\t\t//*** Where the magic happens ***\n\n\t\t// Calculates best-fit y intervals from given values\n\t\t// and returns the interval array\n\n\t\t// TODO: Fractions\n\n\t\tlet max_bound, min_bound, pos_no_of_parts, neg_no_of_parts, part_size; // eslint-disable-line no-unused-vars\n\n\t\t// Critical values\n\t\tlet max_val = parseInt(Math.max(...array));\n\t\tlet min_val = parseInt(Math.min(...array));\n\t\tif(min_val >= 0) {\n\t\t\tmin_val = 0;\n\t\t}\n\n\t\tlet get_params = (value1, value2) => {\n\t\t\tlet bound1, bound2, no_of_parts_1, no_of_parts_2, interval_size;\n\t\t\tif((value1+\"\").length <= 1) {\n\t\t\t\t[bound1, no_of_parts_1] = [10, 5];\n\t\t\t} else {\n\t\t\t\t[bound1, no_of_parts_1] = this.calc_upper_bound_and_no_of_parts(value1);\n\t\t\t}\n\n\t\t\tinterval_size = bound1 / no_of_parts_1;\n\t\t\tno_of_parts_2 = this.calc_no_of_parts(value2, interval_size);\n\t\t\tbound2 = no_of_parts_2 * interval_size;\n\n\t\t\treturn [bound1, bound2, no_of_parts_1, no_of_parts_2, interval_size];\n\t\t};\n\n\t\tconst abs_min_val = min_val * -1;\n\t\tif(abs_min_val <= max_val) {\n\t\t\t// Get the positive region intervals\n\t\t\t// then calc negative ones accordingly\n\t\t\t[max_bound, min_bound, pos_no_of_parts, neg_no_of_parts, part_size]\n\t\t\t\t= get_params(max_val, abs_min_val);\n\t\t\tif(abs_min_val === 0) {\n\t\t\t\tmin_bound = 0; neg_no_of_parts = 0;\n\t\t\t}\n\t\t} else {\n\t\t\t// Get the negative region here first\n\t\t\t[min_bound, max_bound, neg_no_of_parts, pos_no_of_parts, part_size]\n\t\t\t\t= get_params(abs_min_val, max_val);\n\t\t}\n\n\t\t// Make both region parts even\n\t\tif(pos_no_of_parts % 2 !== 0 && neg_no_of_parts > 0) pos_no_of_parts++;\n\t\tif(neg_no_of_parts % 2 !== 0) {\n\t\t\t// every increase in no_of_parts entails an increase in corresponding bound\n\t\t\t// except here, it happens implicitly after every calc_no_of_parts() call\n\t\t\tneg_no_of_parts++;\n\t\t\tmin_bound += part_size;\n\t\t}\n\n\t\tlet no_of_parts = pos_no_of_parts + neg_no_of_parts;\n\t\tif(no_of_parts > 5) {\n\t\t\tno_of_parts /= 2;\n\t\t\tpart_size *= 2;\n\n\t\t\tpos_no_of_parts /=2;\n\t\t}\n\n\t\tif (max_val < (pos_no_of_parts - 1) * part_size) {\n\t\t\tno_of_parts--;\n\t\t}\n\n\t\treturn this.get_intervals(\n\t\t\t(-1) * min_bound,\n\t\t\tpart_size,\n\t\t\tno_of_parts\n\t\t);\n\t}\n\n\tget_intervals(start, interval_size, count) {\n\t\tlet intervals = [];\n\t\tfor(var i = 0; i <= count; i++){\n\t\t\tintervals.push(start);\n\t\t\tstart += interval_size;\n\t\t}\n\t\treturn intervals;\n\t}\n\n\tcalc_upper_bound_and_no_of_parts(max_val) {\n\t\t// Given a positive value, calculates a nice-number upper bound\n\t\t// and a consequent optimal number of parts\n\n\t\tconst part_size = Math.pow(10, ((max_val+\"\").length - 1));\n\t\tconst no_of_parts = this.calc_no_of_parts(max_val, part_size);\n\n\t\t// Use it to get a nice even upper bound\n\t\tconst upper_bound = part_size * no_of_parts;\n\n\t\treturn [upper_bound, no_of_parts];\n\t}\n\n\tcalc_no_of_parts(value, divisor) {\n\t\t// value should be a positive number, divisor should be greater than 0\n\t\t// returns an even no of parts\n\t\tlet no_of_parts = Math.ceil(value / divisor);\n\t\tif(no_of_parts % 2 !== 0) no_of_parts++; // Make it an even number\n\n\t\treturn no_of_parts;\n\t}\n\n\tget_optimal_no_of_parts(no_of_parts) {\n\t\t// aka Divide by 2 if too large\n\t\treturn (no_of_parts < 5) ? no_of_parts : no_of_parts / 2;\n\t}\n\n\tset_avg_unit_width_and_x_offset() {\n\t\t// Set the ... you get it\n\t\tthis.avg_unit_width = this.width/(this.x.length - 1);\n\t\tthis.x_offset = 0;\n\t}\n\n\tget_all_y_values() {\n\t\tlet all_values = [];\n\n\t\t// Add in all the y values in the datasets\n\t\tthis.y.map(d => {\n\t\t\tall_values = all_values.concat(d.values);\n\t\t});\n\n\t\t// Add in all the specific values\n\t\treturn all_values.concat(this.specific_values.map(d => d.value));\n\t}\n\n\tcalc_y_dependencies() {\n\t\tthis.y_min_tops = new Array(this.x_axis_positions.length).fill(9999);\n\t\tthis.y.map(d => {\n\t\t\td.y_tops = d.values.map( val => float_2(this.zero_line - val * this.multiplier));\n\t\t\td.y_tops.map( (y_top, i) => {\n\t\t\t\tif(y_top < this.y_min_tops[i]) {\n\t\t\t\t\tthis.y_min_tops[i] = y_top;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t// this.chart_wrapper.removeChild(this.tip.container);\n\t\t// this.make_tooltip();\n\t}\n\n\tget_bar_height_and_y_attr(y_top) {\n\t\tlet height, y;\n\t\tif (y_top <= this.zero_line) {\n\t\t\theight = this.zero_line - y_top;\n\t\t\ty = y_top;\n\n\t\t\t// In case of invisible bars\n\t\t\tif(height === 0) {\n\t\t\t\theight = this.height * 0.01;\n\t\t\t\ty -= height;\n\t\t\t}\n\t\t} else {\n\t\t\theight = y_top - this.zero_line;\n\t\t\ty = this.zero_line;\n\n\t\t\t// In case of invisible bars\n\t\t\tif(height === 0) {\n\t\t\t\theight = this.height * 0.01;\n\t\t\t}\n\t\t}\n\n\t\treturn [height, y];\n\t}\n\n\tsetup_utils() {\n\t\tthis.draw = {\n\t\t\t'bar': (x, y_top, args, color, index, dataset_index, no_of_datasets) => {\n\t\t\t\tlet total_width = this.avg_unit_width - args.space_width;\n\t\t\t\tlet start_x = x - total_width/2;\n\n\t\t\t\tlet width = total_width / no_of_datasets;\n\t\t\t\tlet current_x = start_x + width * dataset_index;\n\n\t\t\t\tlet [height, y] = this.get_bar_height_and_y_attr(y_top);\n\n\t\t\t\treturn $.createSVG('rect', {\n\t\t\t\t\tclassName: `bar mini fill ${color}`,\n\t\t\t\t\t'data-point-index': index,\n\t\t\t\t\tx: current_x,\n\t\t\t\t\ty: y,\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: height\n\t\t\t\t});\n\n\t\t\t},\n\t\t\t'dot': (x, y, args, color, index) => {\n\t\t\t\treturn $.createSVG('circle', {\n\t\t\t\t\tclassName: `fill ${color}`,\n\t\t\t\t\t'data-point-index': index,\n\t\t\t\t\tcx: x,\n\t\t\t\t\tcy: y,\n\t\t\t\t\tr: args.radius\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tthis.animate = {\n\t\t\t'bar': (bar_obj, x, y_top, index) => {\n\t\t\t\tlet start = x - this.avg_unit_width/4;\n\t\t\t\tlet width = (this.avg_unit_width/2)/this.y.length;\n\t\t\t\tlet [height, y] = this.get_bar_height_and_y_attr(y_top);\n\n\t\t\t\tx = start + (width * index);\n\n\t\t\t\treturn [bar_obj, {width: width, height: height, x: x, y: y}, 250, \"easein\"];\n\t\t\t\t// bar.animate({height: args.new_height, y: y_top}, 250, mina.easein);\n\t\t\t},\n\t\t\t'dot': (dot_obj, x, y_top) => {\n\t\t\t\treturn [dot_obj, {cx: x, cy: y_top}, 300, \"easein\"];\n\t\t\t\t// dot.animate({cy: y_top}, 250, mina.easein);\n\t\t\t}\n\t\t};\n\t}\n}\n","import AxisChart from './AxisChart';\n\nexport default class BarChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.type = 'bar';\n\t\tthis.x_axis_mode = args.x_axis_mode || 'tick';\n\t\tthis.y_axis_mode = args.y_axis_mode || 'span';\n\t\tthis.setup();\n\t}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.x_offset = this.avg_unit_width;\n\t\tthis.unit_args = {\n\t\t\ttype: 'bar',\n\t\t\targs: {\n\t\t\t\tspace_width: this.avg_unit_width/2,\n\t\t\t}\n\t\t};\n\t}\n\n\tmake_overlay() {\n\t\t// Just make one out of the first element\n\t\tlet index = this.x.length - 1;\n\t\tlet unit = this.y[0].svg_units[index];\n\t\tthis.update_current_data_point(index);\n\n\t\tif(this.overlay) {\n\t\t\tthis.overlay.parentNode.removeChild(this.overlay);\n\t\t}\n\n\t\tthis.overlay = unit.cloneNode();\n\t\tthis.overlay.style.fill = '#000000';\n\t\tthis.overlay.style.opacity = '0.4';\n\t\tthis.draw_area.appendChild(this.overlay);\n\t}\n\n\tbind_overlay() {\n\t\t// on event, update overlay\n\t\tthis.parent.addEventListener('data-select', (e) => {\n\t\t\tthis.update_overlay(e.svg_unit);\n\t\t});\n\t}\n\n\tbind_units(units_array) {\n\t\tunits_array.map(unit => {\n\t\t\tunit.addEventListener('click', () => {\n\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\tthis.update_current_data_point(index);\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate_overlay(unit) {\n\t\tlet attributes = [];\n\t\tObject.keys(unit.attributes).map(index => {\n\t\t\tattributes.push(unit.attributes[index]);\n\t\t});\n\n\t\tattributes.filter(attr => attr.specified).map(attr => {\n\t\t\tthis.overlay.setAttribute(attr.name, attr.nodeValue);\n\t\t});\n\t}\n\n\ton_left_arrow() {\n\t\tthis.update_current_data_point(this.current_index - 1);\n\t}\n\n\ton_right_arrow() {\n\t\tthis.update_current_data_point(this.current_index + 1);\n\t}\n\n\tset_avg_unit_width_and_x_offset() {\n\t\tthis.avg_unit_width = this.width/(this.x.length + 1);\n\t\tthis.x_offset = this.avg_unit_width;\n\t}\n}\n","import AxisChart from './AxisChart';\nimport $ from '../helpers/dom';\n\nexport default class LineChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.x_axis_mode = args.x_axis_mode || 'span';\n\t\tthis.y_axis_mode = args.y_axis_mode || 'span';\n\n\t\tif(args.hasOwnProperty('show_dots')) {\n\t\t\tthis.show_dots = args.show_dots;\n\t\t} else {\n\t\t\tthis.show_dots = 1;\n\t\t}\n\t\tthis.region_fill = args.region_fill;\n\n\t\tif(Object.getPrototypeOf(this) !== LineChart.prototype) {\n\t\t\treturn;\n\t\t}\n\t\tthis.dot_radius = args.dot_radius || 4;\n\t\tthis.heatline = args.heatline;\n\t\tthis.type = 'line';\n\n\t\tthis.setup();\n\t}\n\n\tsetup_graph_components() {\n\t\tthis.setup_path_groups();\n\t\tsuper.setup_graph_components();\n\t}\n\n\tsetup_path_groups() {\n\t\tthis.paths_groups = [];\n\t\tthis.y.map((d, i) => {\n\t\t\tthis.paths_groups[i] = $.createSVG('g', {\n\t\t\t\tclassName: 'path-group path-group-' + i,\n\t\t\t\tinside: this.draw_area\n\t\t\t});\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.unit_args = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.dot_radius }\n\t\t};\n\t}\n\n\tmake_new_units_for_dataset(x_values, y_values, color, dataset_index,\n\t\tno_of_datasets, units_group, units_array, unit) {\n\t\tif(this.show_dots) {\n\t\t\tsuper.make_new_units_for_dataset(x_values, y_values, color, dataset_index,\n\t\t\t\tno_of_datasets, units_group, units_array, unit);\n\t\t}\n\t}\n\n\tmake_paths() {\n\t\tthis.y.map((d, i) => {\n\t\t\tthis.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t});\n\t}\n\n\tmake_path(d, i, x_positions, y_positions, color) {\n\t\tlet points_list = y_positions.map((y, i) => (x_positions[i] + ',' + y));\n\t\tlet points_str = points_list.join(\"L\");\n\n\t\tthis.paths_groups[i].textContent = '';\n\n\t\td.path = $.createSVG('path', {\n\t\t\tinside: this.paths_groups[i],\n\t\t\tclassName: `stroke ${color}`,\n\t\t\td: \"M\"+points_str\n\t\t});\n\n\t\tif(this.heatline) {\n\t\t\tlet gradient_id = this.make_gradient(color);\n\t\t\td.path.style.stroke = `url(#${gradient_id})`;\n\t\t}\n\n\t\tif(this.region_fill) {\n\t\t\tthis.fill_region_for_dataset(d, i, color, points_str);\n\t\t}\n\t}\n\n\tfill_region_for_dataset(d, i, color, points_str) {\n\t\tlet gradient_id = this.make_gradient(color, true);\n\n\t\td.region_path = $.createSVG('path', {\n\t\t\tinside: this.paths_groups[i],\n\t\t\tclassName: `region-fill`,\n\t\t\td: \"M\" + `0,${this.zero_line}L` + points_str + `L${this.width},${this.zero_line}`,\n\t\t});\n\n\t\td.region_path.style.stroke = \"none\";\n\t\td.region_path.style.fill = `url(#${gradient_id})`;\n\t}\n\n\tmake_gradient(color, lighter = false) {\n\t\tlet gradient_id ='path-fill-gradient' + '-' + color;\n\n\t\tlet gradient_def = $.createSVG('linearGradient', {\n\t\t\tinside: this.svg_defs,\n\t\t\tid: gradient_id,\n\t\t\tx1: 0,\n\t\t\tx2: 0,\n\t\t\ty1: 0,\n\t\t\ty2: 1\n\t\t});\n\n\t\tlet set_gradient_stop = (grad_elem, offset, color, opacity) => {\n\t\t\t$.createSVG('stop', {\n\t\t\t\t'className': 'stop-color ' + color,\n\t\t\t\t'inside': grad_elem,\n\t\t\t\t'offset': offset,\n\t\t\t\t'stop-opacity': opacity\n\t\t\t});\n\t\t};\n\n\t\tlet opacities = [1, 0.6, 0.2];\n\n\t\tif(lighter) {\n\t\t\topacities = [0.4, 0.2, 0];\n\t\t}\n\n\t\tset_gradient_stop(gradient_def, \"0%\", color, opacities[0]);\n\t\tset_gradient_stop(gradient_def, \"50%\", color, opacities[1]);\n\t\tset_gradient_stop(gradient_def, \"100%\", color, opacities[2]);\n\n\t\treturn gradient_id;\n\t}\n}\n","import LineChart from './LineChart';\n\nexport default class ScatterChart extends LineChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.type = 'scatter';\n\n\t\tif(!args.dot_radius) {\n\t\t\tthis.dot_radius = 8;\n\t\t} else {\n\t\t\tthis.dot_radius = args.dot_radius;\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tsetup_graph_components() {\n\t\tthis.setup_path_groups();\n\t\tsuper.setup_graph_components();\n\t}\n\n\tsetup_path_groups() {}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.unit_args = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.dot_radius }\n\t\t};\n\t}\n\n\tmake_paths() {}\n\tmake_path() {}\n}\n","import BaseChart from './BaseChart';\nimport $ from '../helpers/dom';\n\nexport default class PercentageChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'percentage';\n\n\t\tthis.get_y_label = this.format_lambdas.y_label;\n\t\tthis.get_x_tooltip = this.format_lambdas.x_tooltip;\n\t\tthis.get_y_tooltip = this.format_lambdas.y_tooltip;\n\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\n\t\tthis.colors = args.colors;\n\n\t\tif(!this.colors || this.colors.length < this.data.labels.length) {\n\t\t\tthis.colors = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t\t\t\t'yellow', 'green', 'light-green', 'purple', 'magenta'];\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tmake_chart_area() {\n\t\tthis.chart_wrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.chart_wrapper.style.marginTop = '45px';\n\n\t\tthis.stats_wrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.stats_wrapper.style.marginBottom = '30px';\n\t\tthis.stats_wrapper.style.paddingTop = '0px';\n\t}\n\n\tmake_draw_area() {\n\t\tthis.chart_div = $.create('div', {\n\t\t\tclassName: 'div',\n\t\t\tinside: this.chart_wrapper,\n\t\t\twidth: this.base_width,\n\t\t\theight: this.base_height\n\t\t});\n\n\t\tthis.chart = $.create('div', {\n\t\t\tclassName: 'progress-chart',\n\t\t\tinside: this.chart_div\n\t\t});\n\t}\n\n\tsetup_components() {\n\t\tthis.percentage_bar = $.create('div', {\n\t\t\tclassName: 'progress',\n\t\t\tinside: this.chart\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\tsetup_utils() { }\n\n\tmake_graph_components() {\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tthis.slices = [];\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tlet slice = $.create('div', {\n\t\t\t\tclassName: `progress-bar background ${this.colors[i]}`,\n\t\t\t\tstyle: `width: ${total*100/this.grand_total}%`,\n\t\t\t\tinside: this.percentage_bar\n\t\t\t});\n\t\t\tthis.slices.push(slice);\n\t\t});\n\t}\n\n\tbind_tooltip() {\n\t\tthis.slices.map((slice, i) => {\n\t\t\tslice.addEventListener('mouseenter', () => {\n\t\t\t\tlet g_off = $.offset(this.chart_wrapper), p_off = $.offset(slice);\n\n\t\t\t\tlet x = p_off.left - g_off.left + slice.offsetWidth/2;\n\t\t\t\tlet y = p_off.top - g_off.top - 6;\n\t\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\n\t\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tshow_summary() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.stats_wrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator ${this.colors[i]}\">\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport $ from '../helpers/dom';\n\nexport default class Heatmap extends BaseChart {\n\tconstructor({\n\t\tstart = '',\n\t\tdomain = '',\n\t\tsubdomain = '',\n\t\tdata = {},\n\t\tdiscrete_domains = 0,\n\t\tcount_label = ''\n\t}) {\n\t\tsuper(arguments[0]);\n\n\t\tthis.type = 'heatmap';\n\n\t\tthis.domain = domain;\n\t\tthis.subdomain = subdomain;\n\t\tthis.data = data;\n\t\tthis.discrete_domains = discrete_domains;\n\t\tthis.count_label = count_label;\n\n\t\tlet today = new Date();\n\t\tthis.start = start || this.add_days(today, 365);\n\n\t\tthis.legend_colors = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\t\tthis.translate_x = 0;\n\t\tthis.setup();\n\t}\n\n\tsetup_base_values() {\n\t\tthis.today = new Date();\n\n\t\tif(!this.start) {\n\t\t\tthis.start = new Date();\n\t\t\tthis.start.setFullYear( this.start.getFullYear() - 1 );\n\t\t}\n\t\tthis.first_week_start = new Date(this.start.toDateString());\n\t\tthis.last_week_start = new Date(this.today.toDateString());\n\t\tif(this.first_week_start.getDay() !== 7) {\n\t\t\tthis.add_days(this.first_week_start, (-1) * this.first_week_start.getDay());\n\t\t}\n\t\tif(this.last_week_start.getDay() !== 7) {\n\t\t\tthis.add_days(this.last_week_start, (-1) * this.last_week_start.getDay());\n\t\t}\n\t\tthis.no_of_cols = this.get_weeks_between(this.first_week_start + '', this.last_week_start + '') + 1;\n\t}\n\n\tset_width() {\n\t\tthis.base_width = (this.no_of_cols) * 12;\n\n\t\tif(this.discrete_domains) {\n\t\t\tthis.base_width += (12 * 12);\n\t\t}\n\t}\n\n\tsetup_components() {\n\t\tthis.domain_label_group = $.createSVG(\"g\", {\n\t\t\tclassName: \"domain-label-group chart-label\",\n\t\t\tinside: this.draw_area\n\t\t});\n\t\tthis.data_groups = $.createSVG(\"g\", {\n\t\t\tclassName: \"data-groups\",\n\t\t\tinside: this.draw_area,\n\t\t\ttransform: `translate(0, 20)`\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tthis.domain_label_group.textContent = '';\n\t\tthis.data_groups.textContent = '';\n\t\tthis.distribution = this.get_distribution(this.data, this.legend_colors);\n\t\tthis.month_names = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t\t];\n\n\t\tthis.render_all_weeks_and_store_x_values(this.no_of_cols);\n\t}\n\n\trender_all_weeks_and_store_x_values(no_of_weeks) {\n\t\tlet current_week_sunday = new Date(this.first_week_start);\n\t\tthis.week_col = 0;\n\t\tthis.current_month = current_week_sunday.getMonth();\n\n\t\tthis.months = [this.current_month + ''];\n\t\tthis.month_weeks = {}, this.month_start_points = [];\n\t\tthis.month_weeks[this.current_month] = 0;\n\t\tthis.month_start_points.push(13);\n\n\t\tfor(var i = 0; i < no_of_weeks; i++) {\n\t\t\tlet data_group, month_change = 0;\n\t\t\tlet day = new Date(current_week_sunday);\n\n\t\t\t[data_group, month_change] = this.get_week_squares_group(day, this.week_col);\n\t\t\tthis.data_groups.appendChild(data_group);\n\t\t\tthis.week_col += 1 + parseInt(this.discrete_domains && month_change);\n\t\t\tthis.month_weeks[this.current_month]++;\n\t\t\tif(month_change) {\n\t\t\t\tthis.current_month = (this.current_month + 1) % 12;\n\t\t\t\tthis.months.push(this.current_month + '');\n\t\t\t\tthis.month_weeks[this.current_month] = 1;\n\t\t\t}\n\t\t\tthis.add_days(current_week_sunday, 7);\n\t\t}\n\t\tthis.render_month_labels();\n\t}\n\n\tget_week_squares_group(current_date, index) {\n\t\tconst no_of_weekdays = 7;\n\t\tconst square_side = 10;\n\t\tconst cell_padding = 2;\n\t\tconst step = 1;\n\n\t\tlet month_change = 0;\n\t\tlet week_col_change = 0;\n\n\t\tlet data_group = $.createSVG(\"g\", {\n\t\t\tclassName: \"data-group\",\n\t\t\tinside: this.data_groups\n\t\t});\n\n\t\tfor(var y = 0, i = 0; i < no_of_weekdays; i += step, y += (square_side + cell_padding)) {\n\t\t\tlet data_value = 0;\n\t\t\tlet color_index = 0;\n\n\t\t\tlet timestamp = Math.floor(current_date.getTime()/1000).toFixed(1);\n\n\t\t\tif(this.data[timestamp]) {\n\t\t\t\tdata_value = this.data[timestamp];\n\t\t\t\tcolor_index = this.get_max_checkpoint(data_value, this.distribution);\n\t\t\t}\n\n\t\t\tif(this.data[Math.round(timestamp)]) {\n\t\t\t\tdata_value = this.data[Math.round(timestamp)];\n\t\t\t\tcolor_index = this.get_max_checkpoint(data_value, this.distribution);\n\t\t\t}\n\n\t\t\tlet x = 13 + (index + week_col_change) * 12;\n\n\t\t\t$.createSVG(\"rect\", {\n\t\t\t\tclassName: 'day',\n\t\t\t\tinside: data_group,\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\twidth: square_side,\n\t\t\t\theight: square_side,\n\t\t\t\tfill:  this.legend_colors[color_index],\n\t\t\t\t'data-date': this.get_dd_mm_yyyy(current_date),\n\t\t\t\t'data-value': data_value,\n\t\t\t\t'data-day': current_date.getDay()\n\t\t\t});\n\n\t\t\tlet next_date = new Date(current_date);\n\t\t\tthis.add_days(next_date, 1);\n\t\t\tif(next_date.getMonth() - current_date.getMonth()) {\n\t\t\t\tmonth_change = 1;\n\t\t\t\tif(this.discrete_domains) {\n\t\t\t\t\tweek_col_change = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.month_start_points.push(13 + (index + week_col_change) * 12);\n\t\t\t}\n\t\t\tcurrent_date = next_date;\n\t\t}\n\n\t\treturn [data_group, month_change];\n\t}\n\n\trender_month_labels() {\n\t\t// this.first_month_label = 1;\n\t\t// if (this.first_week_start.getDate() > 8) {\n\t\t// \tthis.first_month_label = 0;\n\t\t// }\n\t\t// this.last_month_label = 1;\n\n\t\t// let first_month = this.months.shift();\n\t\t// let first_month_start = this.month_start_points.shift();\n\t\t// render first month if\n\n\t\t// let last_month = this.months.pop();\n\t\t// let last_month_start = this.month_start_points.pop();\n\t\t// render last month if\n\n\t\tthis.months.shift();\n\t\tthis.month_start_points.shift();\n\t\tthis.months.pop();\n\t\tthis.month_start_points.pop();\n\n\t\tthis.month_start_points.map((start, i) => {\n\t\t\tlet month_name =  this.month_names[this.months[i]].substring(0, 3);\n\n\t\t\t$.createSVG('text', {\n\t\t\t\tclassName: 'y-value-text',\n\t\t\t\tinside: this.domain_label_group,\n\t\t\t\tx: start + 12,\n\t\t\t\ty: 10,\n\t\t\t\tdy: '.32em',\n\t\t\t\tinnerHTML: month_name\n\t\t\t});\n\n\t\t});\n\t}\n\n\tmake_graph_components() {\n\t\tArray.prototype.slice.call(\n\t\t\tthis.container.querySelectorAll('.graph-stats-container, .sub-title, .title')\n\t\t).map(d => {\n\t\t\td.style.display = 'None';\n\t\t});\n\t\tthis.chart_wrapper.style.marginTop = '0px';\n\t\tthis.chart_wrapper.style.paddingTop = '0px';\n\t}\n\n\tbind_tooltip() {\n\t\tArray.prototype.slice.call(\n\t\t\tdocument.querySelectorAll(\".data-group .day\")\n\t\t).map(el => {\n\t\t\tel.addEventListener('mouseenter', (e) => {\n\t\t\t\tlet count = e.target.getAttribute('data-value');\n\t\t\t\tlet date_parts = e.target.getAttribute('data-date').split('-');\n\n\t\t\t\tlet month = this.month_names[parseInt(date_parts[1])-1].substring(0, 3);\n\n\t\t\t\tlet g_off = this.chart_wrapper.getBoundingClientRect(), p_off = e.target.getBoundingClientRect();\n\n\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\tlet x = p_off.left - g_off.left + (width+2)/2;\n\t\t\t\tlet y = p_off.top - g_off.top - (width+2)/2;\n\t\t\t\tlet value = count + ' ' + this.count_label;\n\t\t\t\tlet name = ' on ' + month + ' ' + date_parts[0] + ', ' + date_parts[2];\n\n\t\t\t\tthis.tip.set_values(x, y, name, value, [], 1);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tthis.data = data;\n\t\tthis.setup_values();\n\t\tthis.bind_tooltip();\n\t}\n\n\tget_distribution(data={}, mapper_array) {\n\t\tlet data_values = Object.keys(data).map(key => data[key]);\n\t\tlet data_max_value = Math.max(...data_values);\n\n\t\tlet distribution_step = 1 / (mapper_array.length - 1);\n\t\tlet distribution = [];\n\n\t\tmapper_array.map((color, i) => {\n\t\t\tlet checkpoint = data_max_value * (distribution_step * i);\n\t\t\tdistribution.push(checkpoint);\n\t\t});\n\n\t\treturn distribution;\n\t}\n\n\tget_max_checkpoint(value, distribution) {\n\t\treturn distribution.filter((d, i) => {\n\t\t\tif(i === 1) {\n\t\t\t\treturn distribution[0] < value;\n\t\t\t}\n\t\t\treturn d <= value;\n\t\t}).length - 1;\n\t}\n\n\t// TODO: date utils, move these out\n\n\t// https://stackoverflow.com/a/11252167/6495043\n\ttreat_as_utc(date_str) {\n\t\tlet result = new Date(date_str);\n\t\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\t\treturn result;\n\t}\n\n\tget_dd_mm_yyyy(date) {\n\t\tlet dd = date.getDate();\n\t\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\t\treturn [\n\t\t\t(dd>9 ? '' : '0') + dd,\n\t\t\t(mm>9 ? '' : '0') + mm,\n\t\t\tdate.getFullYear()\n\t\t].join('-');\n\t}\n\n\tget_weeks_between(start_date_str, end_date_str) {\n\t\treturn Math.ceil(this.get_days_between(start_date_str, end_date_str) / 7);\n\t}\n\n\tget_days_between(start_date_str, end_date_str) {\n\t\tlet milliseconds_per_day = 24 * 60 * 60 * 1000;\n\t\treturn (this.treat_as_utc(end_date_str) - this.treat_as_utc(start_date_str)) / milliseconds_per_day;\n\t}\n\n\t// mutates\n\tadd_days(date, number_of_days) {\n\t\tdate.setDate(date.getDate() + number_of_days);\n\t}\n\n\tget_month_name() {}\n}\n","import '../styles/charts.less';\n\nimport BarChart from './charts/BarChart';\nimport LineChart from './charts/LineChart';\nimport ScatterChart from './charts/ScatterChart';\nimport PercentageChart from './charts/PercentageChart';\nimport Heatmap from './charts/Heatmap';\n\n// if (ENV !== 'production') {\n// \t// Enable LiveReload\n// \tdocument.write(\n// \t\t'<script src=\"http://' + (location.host || 'localhost').split(':')[0] +\n// \t\t':35729/livereload.js?snipver=1\"></' + 'script>'\n// \t);\n// }\n\nexport default class Chart {\n\tconstructor(args) {\n\t\tif(args.type === 'line') {\n\t\t\treturn new LineChart(arguments[0]);\n\t\t} else if(args.type === 'bar') {\n\t\t\treturn new BarChart(arguments[0]);\n\t\t} else if(args.type === 'scatter') {\n\t\t\treturn new ScatterChart(arguments[0]);\n\t\t} else if(args.type === 'percentage') {\n\t\t\treturn new PercentageChart(arguments[0]);\n\t\t} else if(args.type === 'heatmap') {\n\t\t\treturn new Heatmap(arguments[0]);\n\t\t} else {\n\t\t\treturn new LineChart(arguments[0]);\n\t\t}\n\t}\n}"],"names":["expr","con","document","querySelector","float_2","d","parseFloat","toFixed","arrays_equal","arr1","arr2","length","are_equal","map","i","$","findNodeIndex","node","previousSibling","create","tag","o","element","createElement","val","appendChild","ref","parentNode","insertBefore","setAttribute","createSVG","createElementNS","runSVGAnimation","svg_container","elements","new_elements","anim_elements","obj","parent","unit","anim_element","new_element","animateSVG","push","replaceChild","array","index","object","key","anim_svg","cloneNode","props","dur","easing_type","type","undefined","old_values","easing","attributeName","animate_element","current_value","getAttribute","value","anim_attr","offset","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","bind","event","callback","split","forEach","addEventListener","unbind","removeEventListener","fire","target","properties","evt","createEvent","initEvent","j","dispatchEvent","SvgTip","title_name","title_value","list_values","title_value_first","x","y","setup","make_tooltip","fill","calc_position","container","this","hide_tip","title","data_point_list","innerHTML","set","li","color","offsetHeight","offsetWidth","max_left","pointer","style","delta","refresh","opacity","BaseChart","height","subtitle","data","format_lambdas","summary","is_navigable","has_legend","raw_chart_args","arguments","specific_values","current_index","chart_types","set_margins","includes","error","Chart","base_height","translate_x","translate_y","bind_window_events","_this","init","setup_base_values","set_width","setup_container","setup_components","setup_values","setup_utils","make_graph_components","show_custom_summary","show_summary","setup_navigation","special_values_width","_this2","get_strwidth","base_width","width","chart_wrapper","stats_wrapper","make_chart_area","make_draw_area","svg","svg_defs","draw_area","tip","bind_tooltip","stats","make_overlay","bind_overlay","e","_this4","keyCode","on_left_arrow","on_right_arrow","on_up_arrow","on_down_arrow","on_enter_key","data_point","data_key","slice","label","parseInt","get_data_point","string","AxisChart","args","labels","datasets","is_series","get_y_label","y_label","get_y_tooltip","y_tooltip","get_x_tooltip","x_tooltip","colors","zero_line","values","isNaN","setup_x","setup_y","set_avg_unit_width_and_x_offset","x_axis_positions","x_old_axis_positions","x_offset","avg_unit_width","y_axis_values","y_old_axis_values","get_all_y_values","y_sums","concat","get_y_axis_points","y_pts","value_range","multiplier","old_multiplier","zero_index","indexOf","interval_height","old_zero_line","setup_marker_components","setup_aggregation_components","setup_graph_components","y_axis_group","className","inside","x_axis_group","specific_y_group","sum_group","average_group","svg_units_groups","_this3","make_y_axis","make_x_axis","draw_graph","make_y_specifics","animate","start_at","text_start_at","axis_line_class","x_axis_mode","make_anim_x_axis","allowed_space","allowed_letters","textContent","point","space_taken","skips","make_x_line","make_anim_y_axis","make_anim_y_specifics","get_y_axis_line_props","text_end_at","_this5","make_y_line","y_axis_mode","hasOwnProperty","draw_new_graph_and_animate","svg_units","make_path","_this6","y_tops","make_new_units","calc_y_dependencies","Array","_this7","update_values","make_new_units_for_dataset","x_values","y_values","dataset_index","no_of_datasets","units_group","units_array","unit_args","data_unit","_this9","draw","bind_units","_this10","toUpperCase","line_type","_this11","relX","pageX","pageY","map_tooltip_x_position_and_show","y_min_tops","x_val","formatted","_this12","set_values","show_tip","updating","sum_units","_this13","old_specific_values","sum","average","indices_to_remove","auto","unshift","splice","new_y","new_x","elements_to_animate","old_x_values","old_y_axis_tops","old_y_values","no_of_extra_pts","_this16","animate_graphs","run_animation","y_point","x_point","data_set","removeChild","_this17","_this18","calc_old_and_new_postions","old_x","old_y","path","animate_path","animate_units","new_path_str","join","path_args","region_path","reg_start_pt","reg_end_pt","region_args","_this19","last_old_x_pos","last_old_y_pos","last_new_x_pos","last_new_y_pos","filler_x","Math","abs","filler_y","old_pos","new_pos","old_vals","new_vals","last_line_pos","make_new_axis_anim_lines","substring","x_line","_this20","transform","_this21","add_and_animate_y_line","_this22","add_and_animate_line","group","superimposed_positions","superimposed_values","no_of_extras","filler_vals","filler_pos","extra_values","extra_positions","label_class","x_pos","line","text","x_level","y_pos","darker","y_level","stroke","specific","filler","new_props","old_props","axis_label_class","y_line","min_bound","pos_no_of_parts","neg_no_of_parts","part_size","max_val","max","min_val","min","get_params","value1","value2","bound1","bound2","no_of_parts_1","no_of_parts_2","interval_size","_this23","calc_upper_bound_and_no_of_parts","calc_no_of_parts","abs_min_val","no_of_parts","get_intervals","start","count","intervals","pow","divisor","ceil","all_values","_this24","y_top","total_width","_this25","space_width","current_x","get_bar_height_and_y_attr","radius","bar_obj","dot_obj","cx","cy","BarChart","update_current_data_point","overlay","update_overlay","svg_unit","attributes","keys","filter","attr","specified","name","nodeValue","LineChart","show_dots","region_fill","Object","getPrototypeOf","prototype","dot_radius","heatline","setup_path_groups","paths_groups","x_positions","y_positions","points_str","gradient_id","make_gradient","fill_region_for_dataset","lighter","gradient_def","set_gradient_stop","grad_elem","opacities","ScatterChart","PercentageChart","max_slices","max_legend_points","marginTop","marginBottom","paddingTop","chart_div","chart","percentage_bar","slice_totals","all_totals","total","totals","sort","a","b","sum_of_others","legend_totals","grand_total","reduce","slices","g_off","p_off","formatted_labels","percent","Heatmap","domain","subdomain","discrete_domains","count_label","today","Date","add_days","legend_colors","setFullYear","getFullYear","first_week_start","toDateString","last_week_start","getDay","no_of_cols","get_weeks_between","domain_label_group","data_groups","distribution","get_distribution","month_names","render_all_weeks_and_store_x_values","no_of_weeks","current_week_sunday","week_col","current_month","getMonth","months","month_weeks","month_start_points","data_group","month_change","day","get_week_squares_group","render_month_labels","current_date","week_col_change","square_side","data_value","color_index","timestamp","floor","getTime","get_max_checkpoint","round","get_dd_mm_yyyy","next_date","shift","pop","month_name","call","querySelectorAll","display","date_parts","month","mapper_array","data_values","data_max_value","distribution_step","checkpoint","date_str","result","setMinutes","getMinutes","getTimezoneOffset","date","dd","getDate","mm","start_date_str","end_date_str","get_days_between","treat_as_utc","number_of_days","setDate"],"mappings":"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"}